<Application x:Class="DocFlow.Presentation.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        <!--Button-->
        
        <Style TargetType="Button">
            <Setter Property="Width" Value="75"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Background" Value="#eee"></Setter>
            <Setter Property="BorderBrush" Value="#eee"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Chrome" BorderBrush="#eee" BorderThickness="2" CornerRadius="2" Background="{TemplateBinding Property=Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Chrome" BorderBrush="Gray" BorderThickness="2" CornerRadius="2" Background="{TemplateBinding Property=Background}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Button" x:Key="btn-primary" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Black"></Setter>
            <Setter Property="Foreground" Value="#eee"></Setter>
            <Setter Property="BorderBrush" Value="Black"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Chrome" BorderBrush="Black" BorderThickness="2" CornerRadius="2" Background="{TemplateBinding Property=Background}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Gray"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Chrome" BorderBrush="Gray" BorderThickness="2" CornerRadius="2" Background="{TemplateBinding Property=Background}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>        
        
        <!--/Button-->                    

        <!--ListBox-->
        
        <Style TargetType="ListBox">
            <Setter Property="Background" Value="#eee" />            
        </Style>

        <Style TargetType="ListBoxItem">            
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                            Value="False" />
                                    <Condition Property="IsSelected"
                                            Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="Gray" />   
                                <Setter Property="FontWeight" Value="Bold" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive"
                                            Value="True" />
                                    <Condition Property="IsSelected"
                                            Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="Gray" />
                                <Setter Property="FontWeight" 
                                        Value="Bold" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--/ListBox-->
        
        <!--Label-->
        
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="30" />
        </Style>
        
        <!--/Label-->
        
        <!--Grid-->
        
        <Style TargetType="Grid" x:Key="defaultPanelBackground">
            <Setter Property="Background" Value="LightGray"></Setter>                                    
        </Style>
        
        <!--/Grid-->

        <!--TextBox-->
        
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="30"/>      
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>       
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="15 0"/>
        </Style>
        
        <!--/TextBox-->
        
        <!--RadioButton-->

        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="0 5 0 0"/>
        </Style>

        <!--/RadioButton-->
        
        <!--ComboBox-->
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="15 0"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <!--/ComboBox-->
        
        <!--DatePicker-->
        
        <Style TargetType="DatePicker">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="15 0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>            
        </Style>
        
        <!--/DatePicker-->
    </Application.Resources>
</Application>
